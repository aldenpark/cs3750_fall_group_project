@page
@model Group_Project.Pages.Assignments.AssignmentHomeModel

@{ ViewData["Title"] = "Assignment Home";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    // https://localhost:44329/Assignments/AssignmentHome?id=1 }


<h1>@Model.Assignment.Title</h1>

<input type="hidden" asp-for="Assignment.SubmissionId" />
<div>
    <h4>Submissions</h4>
    <hr />
    @if (Model.Assignment.SubmissionType != "Text Entry" && Model.SubmissionObj.Count > 0)
    {
<div class="float-sm-right"><a href="@Model.SubmissionObj.LastOrDefault().fileSubmit" target="_blank">@Model.SubmissionObj.LastOrDefault().fileSubmitDisplay</a></div>}
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.DueDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.PointsPossible)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.PointsPossible)
        </dd>
@if (Model.UserObj.UserType == 'I')
{
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Grade)
        </dt>
        <dd class="col-sm-10">
            <form method="post">
                <input type="hidden" asp-for="Assignment.ID" />
                <input type="hidden" asp-for="Assignment.SubmissionId" />
                <input asp-for="Assignment.Grade" />
                <input type="submit" value="Submit" class="btn btn-primary" />
            </form>
        </dd>
}
    </dl>
</div>

    <nav>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            @if (Model.Assignment.SubmissionType != "Text Entry")
            {
<li class="nav-item">
    <a class="nav-link active" id="file-tab" data-toggle="tab" href="#file" role="tab" aria-controls="home"
       aria-selected="true">File Submission</a>
</li> 
            }
            else if (Model.Assignment.SubmissionType == "Text Entry")
            {
<li class="nav-item">
    <a class="nav-link" id="text-tab" data-toggle="tab" href="#text" role="tab" aria-controls="text"
       aria-selected="false">Text Submission</a>
</li>
            }
        </ul>
        <div class="tab-content m-4" id="myTabContent">
            @if (Model.UserObj.UserType == 'I')
            {
            <div class="tab-pane fade @(Model.Assignment.SubmissionType != "Text Entry" ? "show active" : "")" id="file" role="tabpanel" aria-labelledby="file-tab">
                <iframe src="@Model.SubmissionObj.LastOrDefault().fileSubmit" width="800" height="800"></iframe>
            </div>
            <div class="tab-pane fade @(Model.Assignment.SubmissionType == "Text Entry" ? "show active" : "")" id="text" role="tabpanel" aria-labelledby="text-tab">
                @Html.Raw(@Model.Assignment.TextSubmission)
            </div>
            }
            else
            {
            <form method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="Assignment.ID" />
                <input type="hidden" id="SubmissionType" name="SubmissionType" value="@Model.Assignment.SubmissionType" />
                        <div class="tab-pane fade @(Model.Assignment.SubmissionType != "Text Entry" ? "show active" : "")" id="file" role="tabpanel" aria-labelledby="file-tab">
                            <input type="file" class="form-control" id="uploadBox" name="files" />
                        </div>
                        <div class="tab-pane fade @(Model.Assignment.SubmissionType == "Text Entry" ? "show active" : "")" id="text" role="tabpanel" aria-labelledby="text-tab">
                            <textarea class="form-control" asp-for="Assignment.TextSubmission" style="height:200px;"></textarea>
                        </div>

                <div class="form-group mt-4">
                    <input type="submit" value="@((Model.SubmissionObj.Count > 0 && Model.SubmissionObj[0].ID > 0) ? "Resubmit" : "Submit")" class="btn btn-primary" onclick="return ValidateInput()" />
                </div>

            </form>
            }
        </div>
    </nav>

@if (Model.UserObj.UserType == 'S')
{

    <div>
        <a asp-page="/Assignments/AssignmentUpdate?id=@Html.DisplayFor(model => model.Assignment.ID)">Update an assignment</a>
    </div>
}
}
                @section Scripts{
                    @if (Model.UserObj.UserType == 'S')
                    {
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
                        <script>
                            function ValidateInput() {
                                if (document.getElementById("SubmissionType").includes("Text Entry")) {
                                    return true;
                                }
                                else {
                                    if (document.getElementById("uploadBox").value == "") {
                                        swal('Error', 'No Assignment has been selected for submission', 'error')
                                        return false;
                                    }

                                    var fileInput = document.getElementById('uploadBox');
                                    var filePath = fileInput.value;

                                    // Allowing file type
                                    var allowedExtensions = /(\.pdf|\.docx|\.txt)$/i;

                                    if (!allowedExtensions.exec(filePath)) {
                                        swal('Error', 'Invalid file type selected for upload.  Only files of type pdf, docx, and txt are allowed!', 'error')
                                        fileInput.value = '';
                                        return false;
                                    }

                                    return true;
                                }
                            }
                        </script>}
                    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
                }