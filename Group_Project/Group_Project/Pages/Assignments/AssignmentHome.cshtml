@page
@model Group_Project.Pages.Assignments.AssignmentHomeModel

@{ ViewData["Title"] = "Assignment Home";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    // https://localhost:44329/Assignments/AssignmentHome?id=1
}


<h1>CourseDetails</h1>

<div>
    <h4>Course</h4>
    <hr />
    @if (Model.Assignment.SubmissionType != "Text Entry" && Model.SubmissionObj.Count > 0) {
        <div class="float-sm-right"><a href="@Model.SubmissionObj.LastOrDefault().fileSubmit" target="_blank">@Model.SubmissionObj.LastOrDefault().fileSubmitDisplay</a></div>
    }
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.DueDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.DueDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.PointsPossible)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.PointsPossible)
        </dd>
    </dl>
</div>

<form method="post" enctype="multipart/form-data">
    <input type="hidden" <input type="hidden" asp-for="Assignment.ID" />
    <input type="hidden" id="SubmissionType" name="SubmissionType" value="@Model.Assignment.SubmissionType" />
    <nav>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            @if (Model.Assignment.SubmissionType != "Text Entry")
            {
<li class="nav-item">
    <a class="nav-link active" id="file-tab" data-toggle="tab" href="#file" role="tab" aria-controls="home"
       aria-selected="true">File Submission</a>
</li>
 }
else if (Model.Assignment.SubmissionType == "Text Entry")
{
<li class="nav-item">
    <a class="nav-link" id="text-tab" data-toggle="tab" href="#text" role="tab" aria-controls="text"
       aria-selected="false">Text Submission</a>
</li>
}
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade @(Model.Assignment.SubmissionType != "Text Entry" ? "show active" :"")" id="file" role="tabpanel" aria-labelledby="file-tab">
                <input type="file" class="form-control" id="uploadBox" name="files" />
            </div>
            <div class="tab-pane fade @(Model.Assignment.SubmissionType == "Text Entry" ? "show active" :"")" id="text" role="tabpanel" aria-labelledby="text-tab">
                <textarea class="form-control" asp-for="Assignment.TextSubmission" style="height:200px;"></textarea>
            </div>
        </div>
    </nav>

    <div class="form-group mt-4">
        <input type="submit" value="@(Model.SubmissionObj.Count > 0 ? "Resubmit" : "Submit")" class="btn btn-primary" onclick="return ValidateInput()" />
    </div>

    <div>
        <a asp-page="/Assignments/AssignmentUpdate?id=@Html.DisplayFor(model => model.Assignment.ID)">Update an assignment</a>
    </div>
</form>

    @section Scripts{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
        <script>
            function ValidateInput() {
                if (document.getElementById("SubmissionType").includes("Text Entry")) {
                    return true;
                }
                else
                {
                    if (document.getElementById("uploadBox").value == "") {
                        swal('Error', 'No Assignment has been selected for submission', 'error')
                        return false;
                    }

                    var fileInput = document.getElementById('uploadBox');
                    var filePath = fileInput.value;

                    // Allowing file type
                    var allowedExtensions = /(\.pdf|\.docx|\.txt)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        swal('Error', 'Invalid file type selected for upload.  Only files of type pdf, docx, and txt are allowed!', 'error')
                        fileInput.value = '';
                        return false;
                    }

                    return true;
                }
            }</script>
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
